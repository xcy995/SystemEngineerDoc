=== 安装Nginx 

.yum search 包的名字
[source, bash]
yum search nginx 
#  搜索 Nginx 软件包。

.增加 Nginx 官方源
[source, bash]
----
cat << EOF > /etc/yum.repos.d/nginx.repo
[nginx-stable]
name=nginx stable repo
baseurl=http://nginx.org/packages/centos/\$releasever/\$basearch/
gpgcheck=1
enabled=1
gpgkey=https://nginx.org/keys/nginx_signing.key
module_hotfixes=true
EOF
----

.安装 Nginx
[source, bash]
yum install -y nginx-1.24.0
#  安装 Nginx，并检查版本。

.确认nginx是来自官方
[source, bash]
yum info nginx

.备份原始配置文件
[source, bash]
test -f /etc/nginx/nginx.conf.init || cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.init

.修改 Nginx 主配置
[source, bash]
----

cat << EOF > /etc/nginx/nginx.conf
# Nginx 主配置文件
# 更多配置信息，请参考：
#   * 官方英文文档: http://nginx.org/en/docs/
#   * 官方俄文文档: http://nginx.org/ru/docs/

# 设置用户
user nginx;
# 设置工作进程数量
worker_processes auto;
# 设置错误日志
error_log  /var/log/nginx/error.log warn;
# 设置进程 ID 文件
pid        /var/run/nginx.pid;

# 设置工作进程的最大打开文件数
worker_rlimit_nofile 65535;

events {
    worker_connections 65535;
}

http {
    # 包含 MIME 类型
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # 设置日志格式
    log_format  main  '\$host \$server_port \$remote_addr - \$remote_user [\$time_local] "\$request" '
                      '\$status \$request_time \$body_bytes_sent "\$http_referer" '
                      '"\$http_user_agent" "\$http_x_forwarded_for"';

    # 访问日志路径
    access_log  /var/log/nginx/access.log  main;

    # 开启 sendfile
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    # 设置 server_names_hash_bucket_size
    server_names_hash_bucket_size 128;
    server_name_in_redirect off;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;

    # 客户端请求头的超时时间
    client_header_timeout  3m;
    client_body_timeout    3m;
    client_max_body_size 50m;
    client_body_buffer_size 256k;
    send_timeout           3m;

    # 开启 gzip 压缩
    gzip  on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types image/svg+xml application/x-font-wof text/plain text/xml text/css application/xml application/xhtml+xml application/rss+xml application/javascript application/x-javascript text/javascript;
    gzip_vary on;

    # 设置代理头
    proxy_redirect off;
    proxy_set_header Host \$host;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_set_header REMOTE-HOST \$remote_addr;
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_connect_timeout 60;
    proxy_send_timeout 60;
    proxy_read_timeout 60;
    proxy_buffer_size 256k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;
    proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;
    proxy_max_temp_file_size 128m;
    # 让代理服务端不要主动关闭客户端的连接，协助处理499返回代码问题
    proxy_ignore_client_abort on;

    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;

    # 设置默认索引文件
    index index.html index.htm index.php default.html default.htm default.php;

    # 加载 /etc/nginx/conf.d 目录下的模块化配置文件
    include /etc/nginx/conf.d/*.conf;
}
EOF
----

.创建目录
[source, bash]
mkdir -p /etc/nginx/conf.d

.备份原始文件
[source, bash]
test -f /etc/nginx/conf.d/default.conf && (test -f /etc/nginx/conf.d/default.conf.init || cp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.init)

.增加默认 Host
[source,bash]
----
cat << EOF > /etc/nginx/conf.d/default.conf
server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name  _;
    root         /usr/share/nginx/html;

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    location / {
    }

    error_page 404 /404.html;
    location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }
}
EOF

----

.测试 Nginx 配置
[source, bash]

nginx -t && (test -s /var/run/nginx.pid || rm -f /var/run/nginx.pid)
#  测试 Nginx 配置是否正确。

.增加开机启动
[source, bash]
systemctl enable nginx
设置 Nginx 开机自启动。

.检查配置
[source, bash]
systemctl start nginx
systemctl status nginx
检查 Nginx 配置，并启动 Nginx 服务，查看服务状态。


