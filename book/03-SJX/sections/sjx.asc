=== 配置实践星

.创建 MySQL 用户
[source, bash]
----
# 设置 MySQL 用户参数
export SJX_MYSQL_HOST=localhost
export SJX_MYSQL_DB=sjx
export SJX_MYSQL_USER_NAME=sjx
export SJX_MYSQL_USER=${SJX_MYSQL_USER_NAME}@${SJX_MYSQL_HOST}
export SJX_MYSQL_PASSWORD=$(openssl rand -base64 20)

# 永久保存临时配置（重新登录或重启都有效）
sed -i '/export SJX_/d' ~/.bash_profile && env | grep SJX_ | awk '{print "export "$1}' >> ~/.bash_profile

# 创建数据库和用户
mysql -e "DROP DATABASE IF EXISTS ${SJX_MYSQL_DB}; CREATE DATABASE ${SJX_MYSQL_DB};"
mysql -e "DROP USER IF EXISTS ${SJX_MYSQL_USER}; CREATE USER ${SJX_MYSQL_USER} IDENTIFIED BY '${SJX_MYSQL_PASSWORD}';"
mysql -e "GRANT ALL ON ${SJX_MYSQL_DB}.* TO ${SJX_MYSQL_USER} WITH GRANT OPTION;"

# 输出连接参数
echo -e "实践星 MySQL 连接参数：\n\tMySQL 主机地址：${SJX_MYSQL_HOST}\n\tMySQL 主机端口：3306\n\tMySQL 数据库名：${SJX_MYSQL_DB}\n\tMySQL 用户名称：${SJX_MYSQL_USER_NAME}\n\tMySQL 用户密码：${SJX_MYSQL_PASSWORD}"

----

.配置实践星用户无密码登录
[source, bash]
----

yum install -y expect

unbuffer expect -c "
spawn mysql_config_editor set --skip-warn --login-path=${SJX_MYSQL_USER_NAME} --host=${SJX_MYSQL_HOST} --user=${SJX_MYSQL_USER_NAME} --password
expect -nocase \"Enter password:\" {send \"${SJX_MYSQL_PASSWORD}\n\"; interact}
"
----

.测试实践星 MySQL 用户连接
[source, bash]
mysql --login-path=sjx sjx -e 'select user();'

.创建内网实践星用户
[source, bash]
----
useradd --home-dir /var/lib/sjx --create-home --shell /sbin/nologin --comment "Shi Jian Xing" sjx
----
 
.查看 sjx 用户
[source, bash]
getent passwd sjx 

.创建内网实践星目录和文件
[source, bash]
----

mkdir -p /opt/sjx/bin /etc/sjx /var/lib/sjx/images/avatar /var/log/sjx
touch /var/log/sjx/error.log
chown -R sjx:sjx /var/lib/sjx /var/log/sjx

----

.本地克隆实践星代码
[source, bash]
mkdir ~/workspace && cd ~/workspace/
git clone https://gitee.com/fifilyu/shi-jian-xing.git

.本地打包实践星
[source, bash]
----
mvn -f ~/workspace/shi-jian-xing package
cp ~/workspace/shi-jian-xing/target/shi-jian-xing-0.0.1.jar /opt/sjx/bin/

----

.从模板创建配置文件
[source,bash]
----

cd ~/workspace/shi-jian-xing
cp src/main/resources/application.properties.sample /etc/sjx/application.properties
cp src/main/resources/logback.xml.sample /etc/sjx/logback.xml

----

.安装crudini
[source, bash]
yum install -y crudini 

.生成内网实践星主配置
[source, bash]
----

crudini --set --existing /etc/sjx/application.properties "" server.address '0.0.0.0'

crudini --set --existing /etc/sjx/application.properties "" server.port '8383'

crudini --set --existing /etc/sjx/application.properties "" spring.datasource.url 'jdbc:mysql://'${SJX_MYSQL_HOST}'/'${SJX_MYSQL_DB}'?createDatabaseIfNotExist=True&serverTimezone=Asia/Shanghai&useUnicode=yes&characterEncoding=UTF-8'

crudini --set --existing /etc/sjx/application.properties "" spring.datasource.username "${SJX_MYSQL_USER_NAME}"

crudini --set --existing /etc/sjx/application.properties "" spring.datasource.password "${SJX_MYSQL_PASSWORD}"

crudini --set --existing /etc/sjx/application.properties "" spring.redis.password "${SJX_REDIS_PASSWORD}"

crudini --set --existing /etc/sjx/application.properties "" logging.config '/etc/sjx/logback.xml'

----

.确认修改后的实践星主配置
[source, bash]
----

egrep -nh '(server\..*)|(spring\.datasource\.(url|username|password))|(spring\.redis\.password)|(logging\.config)' /etc/sjx/application.properties

----

.查看是否成功添加
[source, bash]
cat  /etc/sjx/application.properties

.生成实践星日志配置
[source, bash]

grep '<file>' /etc/sjx/logback.xml

.更新实践星的 jar 文件软链接
[source, bash]

cd /opt/sjx/bin/
ln -fs shi-jian-xing-0.0.1.jar sjx.jar

.创建内网实践星的 service 文件
[source, bash]
----

cat << EOF > /usr/lib/systemd/system/sjx.service
[Unit]
Description=ShiJianXing: A Spring Boot Demo
After=network.target network-online.target nss-lookup.target

[Service]
Type=simple
Environment="CONFIG_FILE=/etc/sjx/application.properties"
Environment="JAR_FILE=/opt/sjx/bin/sjx.jar"

User=sjx
Group=sjx
WorkingDirectory=/var/lib/sjx
ExecStart=/usr/bin/java -Dspring.config.location=\${CONFIG_FILE} -jar \${JAR_FILE}
SuccessExitStatus=143
StandardOutput=null
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF

----

.开机启动内网实践星
[source, bash]
systemctl enable sjx

.启动内网实践星
[source, bash]
systemctl start sjx


.查看状态
[source, bash]
systemctl status sjx

.查看日志
[source, bash]
tail -f /var/log/sjx/error.log

